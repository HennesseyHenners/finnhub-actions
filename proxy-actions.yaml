# … (everything above stays the same)

paths:
  # … existing paths …

  /evaluate/swing:
    get:
      operationId: evaluateSwing
      summary: Stage-2/3 trend evaluator (RSI, MACD, ADX, Supertrend)
      description: >
        Returns trendAligned, overheatFlag, qualityOk with raw indicator values and rationale.
        Fetches RSI, MACD, ADX, Supertrend (and optional MFI). Stage=3 adds intraday RSI/MACD.
      parameters:
        - name: symbol
          in: query
          required: false
          schema: { type: string }
          description: Single symbol. Use this or `symbols`.
        - name: symbols
          in: query
          required: false
          schema: { type: string }
          description: CSV of symbols (max 3).
        - name: stage
          in: query
          required: false
          schema: { type: string, enum: ['2','3'], default: '2' }
        - name: interval
          in: query
          required: false
          schema: { type: string, default: 1d }
        - name: intradayInterval
          in: query
          required: false
          schema: { type: string, default: 1h }
          description: Used only when stage=3.
        - name: adxMin
          in: query
          required: false
          schema: { type: number, default: 20 }
        - name: rsiMin
          in: query
          required: false
          schema: { type: number, default: 50 }
        - name: overheatRsi
          in: query
          required: false
          schema: { type: number, default: 75 }
        - name: mfiOverheat
          in: query
          required: false
          schema: { type: number, default: 85 }
        - name: requireSupertrendUp
          in: query
          required: false
          schema: { type: string, enum: ['true','false'], default: 'true' }
        - name: requireMacd
          in: query
          required: false
          schema: { type: string, enum: ['true','false'], default: 'true' }
        - name: includeMfi
          in: query
          required: false
          schema: { type: string, enum: ['true','false'], default: 'false' }
        - name: type
          in: query
          required: false
          schema: { type: string, enum: [stocks, crypto] }
          description: Force asset type. Usually not required.
        - name: exchange
          in: query
          required: false
          schema: { type: string }
          description: Crypto exchange (default binance).
      responses:
        '200':
          description: Evaluation per symbol
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SwingEvalResponse'

components:
  schemas:
    # … existing schemas …

    SwingEvalResponse:
      type: object
      properties:
        symbol: { type: string }
        stage: { type: string, enum: ['2','3'] }
        interval: { type: string }
        intradayInterval: { type: string, nullable: true }
        indicators:
          type: object
          properties:
            rsi: { type: number, nullable: true }
            adx: { type: number, nullable: true }
            macd:
              type: object
              properties:
                hist: { type: number, nullable: true }
                macd: { type: number, nullable: true }
                signal: { type: number, nullable: true }
            supertrend:
              type: object
              properties:
                trend: { type: string, nullable: true }
            mfi: { type: number, nullable: true }
            rsiIntraday: { type: number, nullable: true }
            macdIntradayHist: { type: number, nullable: true }
        flags:
          type: object
          properties:
            adxOk: { type: boolean }
            rsiOk: { type: boolean }
            macdOk: { type: boolean }
            supertrendUp: { type: boolean }
            trendAligned: { type: boolean }
            overheatFlag: { type: boolean }
            qualityOk: { type: boolean }
        rationale:
          type: array
          items: { type: string }
